import type { NextPage } from 'next';
import * as React from 'react';
import Head from 'next/head';
import styles from '@styles/Home.module.css';
import { useRouter } from 'next/router';
import useTrans from '@hooks/useTrans';
import { LoginForm } from '@components/login/LoginForm';
import { RequestAccessForm } from '@components/requestAccess/RequestAccessForm';
import { useAuth } from '@components/auth/AuthProvider';
import { Container, Typography, Box, Grid } from '@mui/material';
import { get, has } from 'lodash';

type NextPageWithLayout = NextPage & {
  getLayout?: (page: ReactElement) => ReactNode;
};

const LoginEmailCode: NextPageWithLayout = ({
  accessToken,
  redirectPage,
}: {
  accessToken: string;
  redirectPage: string;
}) => {
  const { auth } = useAuth();
  const router = useRouter();
  const trans = useTrans();
  async function checkCodeAndGetToken() {
    if (!accessToken) {
      router.push(redirectPage);
    }
    try {
      await auth.signIn(accessToken);
    } catch (err) {
      console.error(err);
    }
    router.push(redirectPage);
  }
  checkCodeAndGetToken();

  const [formState, setFormState] = React.useState<'login' | 'signin'>('login');

  return (
    <div className={styles.container}>
      <Head>
        <title>Verify code to login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.biuuIv}>
        <Container maxWidth="lg">
          <Box mt={{ xs: 6, sm: 8, md: 16 }} mb={4}>
            <Grid container spacing={4}>
              <Grid item xs={12} sm={8} md={6}>
                <div>
                  {formState === 'login' && (
                    <LoginForm
                      showRequestAccessForm={() => {
                        setFormState('signin');
                      }}
                    />
                  )}
                  {formState === 'signin' && (
                    <RequestAccessForm
                      showRequestAccessForm={() => {
                        setFormState('login');
                      }}
                    />
                  )}
                </div>
              </Grid>
            </Grid>
          </Box>
        </Container>
      </div>
      <Container maxWidth="lg">
        <Box my={6}>
          <Grid container spacing={10}>
            <Grid item xs={12} sm={6}>
              <Box textAlign={{ xs: 'center', sm: 'initial' }}>
                <Typography variant="h6" paragraph={true}>
                  {trans.common['aboutRealadvisor']}
                </Typography>
                <Typography
                  variant="body1"
                  paragraph
                  style={{ whiteSpace: 'pre-line' }}
                >
                  {trans.common['aboutRealadvisorParagaph1']}
                </Typography>
                <Typography variant="body1" style={{ whiteSpace: 'pre-line' }}>
                  {trans.common['aboutRealadvisorParagaph2']}
                </Typography>
              </Box>
            </Grid>
          </Grid>
        </Box>
      </Container>
    </div>
  );
};

export async function getServerSideProps(context) {
  const { params, locale = 'en' } = context;
  const { code } = params;
  let redirectPage = '/';
  let accessToken = '';
  try {
    const res = await fetch(process.env.NEXT_PUBLIC_API_URL + '/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept-Language': locale,
      },
      body: JSON.stringify({
        token: code,
      }),
    });
    const data = await res.json();
    if (res.status === 201) {
      if (has(data, 'access_token') && get(data, 'access_token')) {
        redirectPage = '/overview';
        accessToken = get(data, 'access_token');
      }
    }
  } catch (error) {
    console.error('error request access token');
  }
  return {
    props: {
      accessToken,
      redirectPage,
    },
  };
}

export default LoginEmailCode;
