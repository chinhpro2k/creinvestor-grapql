import { Container, Grid } from '@mui/material';
import styles from '@styles/Deal.module.scss';
import type { NextPage } from 'next';
import Head from 'next/head';
import * as React from 'react';
import Layout from '../../components/layout/layout';
import Preferences from '@components/setting/preferences';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { OrganizationForm } from '@components/setting/OrganizationForm';
import Account from '@components/setting/Account';

type NextPageWithLayout = NextPage & {
  getLayout?: (page: ReactElement) => ReactNode;
  requireAuth?: boolean;
};

const Setting: NextPageWithLayout = (_props) => {
  const router = useRouter();

  const [tab, setTab] = useState<string>('account'); // "account"||"organization"||"preferences"

  //===============function===========
  const returnToHome = () => {
    router.push('/');
  };
  const changeTab = (_tab: string) => {
    switch (_tab) {
      case 'account':
        router.push('#account');
        setTab(_tab);
        break;
      case 'organization':
        router.push('#organization');
        setTab(_tab);
        break;
      case 'preferences':
        router.push('#preferences');
        setTab(_tab);
        break;
    }
  };
  useEffect(() => {
    if (router) {
      const str = router.asPath ? router.asPath : '';
      const arrStr = str.split('#');
      if (arrStr.length > 1) {
        switch (arrStr[1]) {
          case 'account':
            changeTab('account');
            break;
          case 'organization':
            changeTab('organization');
            break;
          case 'preferences':
            changeTab('preferences');
            break;
          default:
            changeTab('account');
            break;
        }
      }
    }
  }, []); // eslint-disable-line
  // ===============render============
  return (
    <div id={'preferences'} className={styles.container}>
      <Head>
        <title>Setting Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container spacing={1}>
        <Grid item xs={3}></Grid>
        <Grid item xs={9}>
          <div className="return-home" onClick={() => returnToHome()}>
            <svg
              width="7"
              height="13"
              viewBox="0 0 7 13"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6.70711 10.7929C7.09763 11.1834 7.09763 11.8166 6.70711 12.2071C6.31658 12.5976 5.68342 12.5976 5.29289 12.2071L6.70711 10.7929ZM5.29289 0.792893C5.68342 0.402369 6.31658 0.402369 6.70711 0.792893C7.09763 1.18342 7.09763 1.81658 6.70711 2.20711L5.29289 0.792893ZM5.29289 12.2071L1 7.91421L2.41421 6.5L6.70711 10.7929L5.29289 12.2071ZM1 5.08579L5.29289 0.792893L6.70711 2.20711L2.41421 6.5L1 5.08579ZM1 7.91421C0.218953 7.13317 0.218951 5.86684 1 5.08579L2.41421 6.5L2.41421 6.5L1 7.91421Z"
                fill="#3455D1"
              />
            </svg>
            Return to home page
          </div>
        </Grid>
      </Grid>
      <Grid container spacing={1}>
        <Grid item xs={3}>
          <div className="layout-left">
            <p className="title-left">Settings</p>
            <div
              className={`item-left ${tab === 'account' && 'active'}`}
              onClick={() => changeTab('account')}
            >
              <div className="icon">
                <svg
                  width="28"
                  height="28"
                  viewBox="0 0 28 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.9998 0.666687C6.63984 0.666687 0.666504 6.64002 0.666504 14C0.666504 21.36 6.63984 27.3334 13.9998 27.3334C21.3598 27.3334 27.3332 21.36 27.3332 14C27.3332 6.64002 21.3598 0.666687 13.9998 0.666687ZM13.9998 4.66669C16.2132 4.66669 17.9998 6.45335 17.9998 8.66669C17.9998 10.88 16.2132 12.6667 13.9998 12.6667C11.7865 12.6667 9.99984 10.88 9.99984 8.66669C9.99984 6.45335 11.7865 4.66669 13.9998 4.66669ZM13.9998 23.6C10.6665 23.6 7.71984 21.8934 5.99984 19.3067C6.03984 16.6534 11.3332 15.2 13.9998 15.2C16.6532 15.2 21.9598 16.6534 21.9998 19.3067C20.2798 21.8934 17.3332 23.6 13.9998 23.6Z"
                    fill="#333E48"
                  />
                </svg>
              </div>
              <p>Account</p>
            </div>
            <div
              className={`item-left ${tab === 'organization' && 'active'}`}
              onClick={() => changeTab('organization')}
            >
              <div className="icon">
                <svg
                  width="32"
                  height="16"
                  viewBox="0 0 32 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M16 9C18.1733 9 20.0933 9.52 21.6533 10.2C23.0933 10.84 24 12.28 24 13.84V14.6667C24 15.4 23.4 16 22.6667 16H9.33333C8.6 16 8 15.4 8 14.6667V13.8533C8 12.28 8.90667 10.84 10.3467 10.2133C11.9067 9.52 13.8267 9 16 9ZM5.33333 9.33333C6.8 9.33333 8 8.13333 8 6.66667C8 5.2 6.8 4 5.33333 4C3.86667 4 2.66667 5.2 2.66667 6.66667C2.66667 8.13333 3.86667 9.33333 5.33333 9.33333ZM6.84 10.8C6.34667 10.72 5.85333 10.6667 5.33333 10.6667C4.01333 10.6667 2.76 10.9467 1.62667 11.44C0.64 11.8667 0 12.8267 0 13.9067V14.6667C0 15.4 0.6 16 1.33333 16H6V13.8533C6 12.7467 6.30667 11.7067 6.84 10.8ZM26.6667 9.33333C28.1333 9.33333 29.3333 8.13333 29.3333 6.66667C29.3333 5.2 28.1333 4 26.6667 4C25.2 4 24 5.2 24 6.66667C24 8.13333 25.2 9.33333 26.6667 9.33333ZM32 13.9067C32 12.8267 31.36 11.8667 30.3733 11.44C29.24 10.9467 27.9867 10.6667 26.6667 10.6667C26.1467 10.6667 25.6533 10.72 25.16 10.8C25.6933 11.7067 26 12.7467 26 13.8533V16H30.6667C31.4 16 32 15.4 32 14.6667V13.9067ZM16 0C18.2133 0 20 1.78667 20 4C20 6.21333 18.2133 8 16 8C13.7867 8 12 6.21333 12 4C12 1.78667 13.7867 0 16 0Z"
                    fill="#333E48"
                  />
                </svg>
              </div>
              <p>Organization</p>
            </div>
            <div
              className={`item-left ${tab === 'preferences' && 'active'}`}
              onClick={() => changeTab('preferences')}
            >
              <div className="icon">
                <svg
                  width="26"
                  height="28"
                  viewBox="0 0 26 28"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M22.9065 15.3066C22.9598 14.88 22.9998 14.4533 22.9998 14C22.9998 13.5466 22.9598 13.12 22.9065 12.6933L25.7198 10.4933C25.9731 10.2933 26.0398 9.93329 25.8798 9.63996L23.2131 5.02663C23.0531 4.73329 22.6931 4.62663 22.3998 4.73329L19.0798 6.06663C18.3865 5.53329 17.6398 5.09329 16.8265 4.75996L16.3198 1.22663C16.2798 0.906626 15.9998 0.666626 15.6665 0.666626H10.3331C9.99979 0.666626 9.71979 0.906626 9.67979 1.22663L9.17312 4.75996C8.35979 5.09329 7.61312 5.54663 6.91979 6.06663L3.59979 4.73329C3.29312 4.61329 2.94645 4.73329 2.78645 5.02663L0.119786 9.63996C-0.0535475 9.93329 0.0264527 10.2933 0.279786 10.4933L3.09312 12.6933C3.03979 13.12 2.99979 13.56 2.99979 14C2.99979 14.44 3.03979 14.88 3.09312 15.3066L0.279786 17.5066C0.0264527 17.7066 -0.0402142 18.0666 0.119786 18.36L2.78645 22.9733C2.94645 23.2666 3.30645 23.3733 3.59979 23.2666L6.91979 21.9333C7.61312 22.4666 8.35979 22.9066 9.17312 23.24L9.67979 26.7733C9.71979 27.0933 9.99979 27.3333 10.3331 27.3333H15.6665C15.9998 27.3333 16.2798 27.0933 16.3198 26.7733L16.8265 23.24C17.6398 22.9066 18.3865 22.4533 19.0798 21.9333L22.3998 23.2666C22.7065 23.3866 23.0531 23.2666 23.2131 22.9733L25.8798 18.36C26.0398 18.0666 25.9731 17.7066 25.7198 17.5066L22.9065 15.3066ZM12.9998 18.6666C10.4265 18.6666 8.33312 16.5733 8.33312 14C8.33312 11.4266 10.4265 9.33329 12.9998 9.33329C15.5731 9.33329 17.6665 11.4266 17.6665 14C17.6665 16.5733 15.5731 18.6666 12.9998 18.6666Z"
                    fill="#333E48"
                  />
                </svg>
              </div>
              <p>Deal preferences</p>
            </div>
          </div>
        </Grid>
        <Grid item xs={9}>
          {tab === 'organization' && <OrganizationForm />}
          {tab === 'preferences' && <Preferences />}
          {tab === 'account' && <Account />}
        </Grid>
      </Grid>
    </div>
  );
};

Setting.requireAuth = true;

Setting.getLayout = function getLayout(page: React.ReactElement) {
  return (
    <Container maxWidth="lg">
      <Layout>{page}</Layout>
    </Container>
  );
};

export default Setting;
